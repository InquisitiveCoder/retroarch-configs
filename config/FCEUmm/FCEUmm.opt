# For more information on aspect ratio, see
# https://www.nesdev.org/wiki/Overscan
fceumm_aspect = "8:7 PAR"

# Removes the 8 sprite per scanline limit, greatly reduces flickering
# in games when many sprites are on screen. A handful of games rely on
# the sprite limit, but they're scarce enough that it's simpler to add
# overrides for the exceptions.
# See https://www.nesdev.org/wiki/Sprite_overflow_games
fceumm_nospritelimit = "enabled"

# Removes slowdowns.
fceumm_overclocking = "2x-Postrender"

# Hides graphical glitches related to horizontal scrolling.
# If a game exhibits such glitches, 4px of cropping usually isn't
# enough to hide it, while 12px will often cut into HUD elements.
fceumm_overscan_h_left = "8"
fceumm_overscan_h_right = "8"

# Most games avoid placing HUD elements at the top and bottom edges of
# the screen, and games that need to scroll in two directions (e.g.
# Final Fantasy) may contain graphical glitches there.
#
# Cropping 8 pixels from both edges is enough to mask these glitches.
# The resulting 224p content size also plays nicely with the current
# implementation of Smart integer scaling for 720p (Nintendo Switch),
# 800p (Steam Deck), 1080p and 4k resolutions. If you're using a 1440p
# monitor, you'll want to change Integer Scale Scaling to Underscale.
fceumm_overscan_v_bottom = "8"
fceumm_overscan_v_top = "8"

# This is the most accurate color palette.
fceumm_palette = "magnum-fbx"

# The core defaults to Low quality just in case it's running on
# extremely slow hardware.
fceumm_sndquality = "Very High"
